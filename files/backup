#!/bin/bash -l

PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin

cleanup() {
  echo "Starting Prometheus"
  start prometheus BACKUP=SKIP >/dev/null 2>&1
}

save() {
  # Ensures we start prometheus no matter what once done
  if [ "$UPSTART_JOB" == "" ]; then
    trap cleanup EXIT

    # Prometheus backs itself up after stopping
    stop prometheus

    # Prometheus was running, it will call us back once it's done.
    if [ "$?" == "0" ]; then
      exit 0
    fi
  fi

  # Backup
  run_duply prometheus backup --force --allow-source-mismatch
}

restore() {
  if [ "$UPSTART_JOB" == "" ]; then
    stop prometheus BACKUP=SKIP
  fi

  # Clean out Prometheus
  rm -rf /var/lib/prometheus/*

  # Recover
  run_duply prometheus restore /var/lib/prometheus --force

  # Cleanup just to be certain
  rm -f /var/lib/prometheus/PRISTINE

  exit 0
}

purge() {
  # Cleanup and expire backups
  run_duply prometheus purge_cleanup  --force
}

# We run duply under an exclusive lock, to avoid parallel execution
# shellcheck disable=SC2094
run_duply() {
  (
    flock -x 9
    /usr/local/bin/duply "$@"
  ) 9< /usr/local/bin/duply
}

case "$1" in
   save)
   save
   ;;
   restore)
   restore
   ;;
   purge)
   purge
   ;;
   *)
   echo "$0 [save|restore]"
   exit
   ;;
esac

